{
  "type": "labWork",
  "content": {
    "tiles": [
      {
        "id": "QPU23TTaf0VV-NM-",
        "title": "Text 13",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>Today we will develop a DataFlow program that can prevent the gripper from crushing fragile objects (like an egg). </p><p>Just like engineers, we will first run a simulation to make sure the program works well and then test the program with a physical gripper. </p><p>Your DataFlow program will incorporate two new types of blocks: the TRANSFORM block and the HOLD block. Let&#x27;s familiarize ourselves with these blocks. </p>"
          ]
        }
      },
      {
        "id": "NSB6wZqEPnzXPGGG",
        "title": "Text 14",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>The Transform Block</strong></p><p>In order to grab fragile objects, we&#x27;d like to gripper to close slowly rather than abruptly. If the gripper closes too fast, we won&#x27;t be able to pause it just before it crushes the object. </p><p>To do that, we will need to use the transform block.</p><p>To learn about the transform block, try to create the same DataFlow program as in the image below.</p>"
          ]
        }
      },
      {
        "id": "XbKOhvEsnJyN1RhT",
        "title": "Image 1",
        "content": {
          "type": "Image",
          "url": "brain/images/transform.jpg",
          "filename": "brain/images/transform.jpg"
        }
      },
      {
        "id": "13nxE72_XiQ2bxeT",
        "title": "Text 15",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>Make sure to select &#x27;ramp&#x27; in the transform drop-down menu. Also, open the mini-graph in each block by clicking on the mini-graph icon (pointed by the red arrows in the image above). Look closely at the two graphs and answer the following question in your workspace: </p>"
          ]
        }
      },
      {
        "id": "saSOUJlInFoYlJc9",
        "title": "Text 16",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u>Question</u>: What is the difference between the two graphs? </p><p><u>Your answer</u>: </p>"
          ]
        }
      },
      {
        "id": "z_z6iILZ6lBFZKhW",
        "title": "Text 17",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>The Hold Block</strong></p><p>As explained in the video, the Hold block receives two inputs:</p><p>Input 1 (the top one) determines which value is passed through.</p><p>Input 2 (the bottom one) determines if the block is on or off.</p><p>If the Hold block is OFF, it simply passes input 1 through. In other words, the output would be equal to input 1.</p><p>If the Hold block is ON, it can do different things, such as holding 0, which would make the gripper open and release an object.  </p>"
          ]
        }
      },
      {
        "id": "rJt5kDc73bJomWKx",
        "title": "Text 2",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>Modeling Touch Receptors</strong></p><p>Let&#x27;s design a DataFlow program that detects the temperature of objects and makes the gripper release an object when it&#x27;s too hot (&gt;52 degrees celsius). </p><p>1. Drag the following DataFlow tile into your workspace. Make sure that &quot;simulated EMG&quot; is selected in the sensor block.</p><p>2. Connect the blocks and change the value of Number 1 such that the gripper closes proportionally to the level of the EMG signal. </p><p>Hint: the gripper only responds to numbers between 0 (fully open) and 1 (fully closed)</p>"
          ]
        }
      },
      {
        "id": "fXr4dhoarK6Kk02g",
        "title": "Program 1",
        "content": {
          "type": "Dataflow",
          "programDataRate": 1000,
          "programZoom": {
            "dx": 0.484039306640625,
            "dy": -0.00152587890625,
            "scale": 0.37423311417881716
          },
          "program": {
            "values": {
              "3": {
                "currentValues": {
                  "nodeValue": 1
                }
              },
              "6": {
                "currentValues": {}
              },
              "7": {
                "currentValues": {}
              },
              "10": {
                "currentValues": {
                  "nodeValue": 0
                }
              }
            },
            "id": "dataflow@0.1.0",
            "nodes": {
              "3": {
                "id": 3,
                "name": "Number",
                "x": 10.538104872315643,
                "y": 227.72051069738455,
                "inputs": {},
                "outputs": {
                  "num": {
                    "connections": {}
                  }
                },
                "data": {
                  "plot": false,
                  "orderedDisplayName": "Number 1",
                  "nodeValueUnits": ""
                }
              },
              "6": {
                "id": 6,
                "name": "Sensor",
                "x": 13.816700929226307,
                "y": 74.77543672898062,
                "inputs": {},
                "outputs": {
                  "num": {
                    "connections": {}
                  }
                },
                "data": {
                  "plot": false,
                  "orderedDisplayName": "Sensor 2",
                  "type": "emg-reading",
                  "sensor": "SIMemg_key",
                  "virtual": false
                }
              },
              "7": {
                "id": 7,
                "name": "Math",
                "x": 242.2529663252481,
                "y": 135.13033286019981,
                "inputs": {
                  "num1": {
                    "connections": {}
                  },
                  "num2": {
                    "connections": {}
                  }
                },
                "outputs": {
                  "num": {
                    "connections": {}
                  }
                },
                "data": {
                  "plot": false,
                  "orderedDisplayName": "Math 3",
                  "mathOperator": "Divide"
                }
              },
              "10": {
                "id": 10,
                "name": "Demo Output",
                "x": 764.575871289139,
                "y": 122.64873253161873,
                "inputs": {
                  "nodeValue": {
                    "connections": {}
                  },
                  "tilt": {
                    "connections": {}
                  }
                },
                "outputs": {},
                "data": {
                  "orderedDisplayName": "Demo Output 4",
                  "outputType": "Grabber",
                  "demoOutput": 0
                }
              }
            }
          }
        }
      },
      {
        "id": "srxKpumyruyS7yoA",
        "title": "Text 9",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>3. To prevent damage from hot objects, add a temperature sensor to your program. To do so, click on &quot;Sensor&quot; and select &quot;Temperature&quot; as a sensor type. Then, select &quot;Temperature Demo Data&quot; in the second dropdown menu.</p><p>4. Add a logic block to check if the temp is above 52 degrees. </p><p>5. Next, we will need to use a new block type called &quot;Hold.&quot; The function of this block is described in <a href=\"https://drive.google.com/file/d/1VbpM4w3C9wnWMT9o3RScMFOITH9vWAzA/view?usp=share_link\">this short video</a>.  </p>"
          ]
        }
      },
      {
        "id": "-iTf_NvEdVage5PD",
        "title": "Text 10",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>As explained in the video, the Hold block receives two inputs:</p><p>Input 1 (the top one) determines which value is passed through.</p><p>Input 2 (the bottom one) determines if the block is on or off.</p><p>If the Hold block is OFF, it simply passes input 1 through. In other words, the output would be equal to input 1.</p><p>If the Hold block is ON, it can do different things, such as holding 0, which would make the gripper open and release an object.  </p><p>6. Finally, connect all the blocks together such that when the temp is greater than 52 the gripper opens up. </p><p>Watch <a href=\"https://drive.google.com/file/d/1WroS5tX2lecfdLIVzATAhkqFnUrHSWsN/view?usp=share_link\">this tutorial video</a> if you need some additional guidance.  </p>"
          ]
        }
      },
      {
        "id": "OpA7t27RXurcLg-k",
        "title": "Text 8",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>Reflection</strong></p><p>At the end of the activity, please record your current thinking and learning in your learning journal (see Reflection tab). </p>"
          ]
        }
      }
    ],
    "sharedModels": [
      {
        "sharedModel": {
          "type": "SharedDataSet",
          "id": "GaG54XgfEvVk0TXp",
          "providerId": "fXr4dhoarK6Kk02g",
          "dataSet": {
            "id": "Z5k_hPOSbDfKTbZU",
            "attributes": [],
            "cases": []
          }
        },
        "tiles": [
          "fXr4dhoarK6Kk02g"
        ]
      },
      {
        "sharedModel": {
          "type": "SharedVariables",
          "id": "i_XkwXDwyCD84JyN",
          "variables": [
            {
              "id": "QoUhLFHAy9x4vdlh",
              "name": "emg_key",
              "displayName": "EMG",
              "value": 403,
              "inputs": [],
              "color": "light-gray",
              "icon": "ccicon://emg_key",
              "labels": [
                "input",
                "sensor:emg-reading"
              ]
            },
            {
              "id": "vtVEMvyrmuivOLuM",
              "name": "pressure_key",
              "displayName": "Surface Pressure",
              "unit": "mPa",
              "value": 0,
              "inputs": [],
              "color": "light-gray",
              "icon": "ccicon://pressure_key",
              "labels": [
                "input",
                "sensor:fsr-reading",
                "className:long-name"
              ]
            },
            {
              "id": "3EWb9mDBBvgjyL25",
              "name": "gripper_key",
              "displayName": "Gripper",
              "value": 0,
              "inputs": [],
              "color": "light-gray",
              "icon": "ccicon://gripper_key",
              "labels": [
                "output",
                "live-output:Grabber",
                "live-output:Gripper 2.0"
              ]
            }
          ]
        },
        "tiles": [
          "fXr4dhoarK6Kk02g",
          "rJt5kDc73bJomWKx",
          "srxKpumyruyS7yoA",
          "-iTf_NvEdVage5PD",
          "OpA7t27RXurcLg-k",
          "QPU23TTaf0VV-NM-",
          "NSB6wZqEPnzXPGGG",
          "13nxE72_XiQ2bxeT",
          "saSOUJlInFoYlJc9",
          "z_z6iILZ6lBFZKhW"
        ]
      }
    ]
  }
}