{
  "type": "labWork",
  "content": {
    "tiles": [
      {
        "id": "rJt5kDc73bJomWKx",
        "title": "Text 2",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>Modeling touch receptors in DataFlow</strong></p><p>Let&#x27;s design a DataFlow program that detects the level of pressure applied by the gripper and makes the gripper release an object when too much pressure is applied.</p><p>1. Drag the following Simulation (Sim) tile and DataFlow tiles into your workspace and place them side-by-side. </p><p>2. Connect the blocks and change the value of Number 1 such that the gripper closes proportionally to the level of the EMG signal. </p>"
          ]
        }
      },
      [
        {
          "id": "fXr4dhoarK6Kk02g",
          "title": "Program 1",
          "content": {
            "type": "Dataflow",
            "programDataRate": 1000,
            "programZoom": {
              "dx": 0.484039306640625,
              "dy": -0.00152587890625,
              "scale": 0.37423311417881716
            },
            "program": {
              "values": {
                "3": {
                  "currentValues": {
                    "nodeValue": 1
                  }
                },
                "6": {
                  "currentValues": {
                    "nodeValue": 470
                  }
                },
                "7": {
                  "currentValues": {}
                },
                "8": {
                  "currentValues": {
                    "nodeValue": 0
                  }
                }
              },
              "id": "dataflow@0.1.0",
              "nodes": {
                "3": {
                  "id": 3,
                  "name": "Number",
                  "x": 10.538104872315643,
                  "y": 227.72051069738455,
                  "inputs": {},
                  "outputs": {
                    "num": {
                      "connections": {}
                    }
                  },
                  "data": {
                    "plot": false,
                    "orderedDisplayName": "Number 1",
                    "nodeValueUnits": ""
                  }
                },
                "6": {
                  "id": 6,
                  "name": "Sensor",
                  "x": 13.816700929226307,
                  "y": 74.77543672898062,
                  "inputs": {},
                  "outputs": {
                    "num": {
                      "connections": {}
                    }
                  },
                  "data": {
                    "plot": false,
                    "orderedDisplayName": "Sensor 2",
                    "type": "emg-reading",
                    "sensor": "SIMemg_key",
                    "virtual": false
                  }
                },
                "7": {
                  "id": 7,
                  "name": "Math",
                  "x": 242.2529663252481,
                  "y": 135.13033286019981,
                  "inputs": {
                    "num1": {
                      "connections": {}
                    },
                    "num2": {
                      "connections": {}
                    }
                  },
                  "outputs": {
                    "num": {
                      "connections": {}
                    }
                  },
                  "data": {
                    "plot": false,
                    "orderedDisplayName": "Math 3",
                    "mathOperator": "Divide"
                  }
                },
                "8": {
                  "id": 8,
                  "name": "Live Output",
                  "x": 516.2191134759078,
                  "y": 121.01000988756715,
                  "inputs": {
                    "nodeValue": {
                      "connections": {}
                    }
                  },
                  "outputs": {},
                  "data": {
                    "orderedDisplayName": "Live Output 4",
                    "outputType": "Grabber",
                    "hubSelect": "Simulated Gripper",
                    "liveOutputType": "Grabber"
                  }
                }
              }
            }
          }
        },
        {
          "id": "FXSKc3qCsCpcuyBh",
          "title": "Simulation 1",
          "content": {
            "type": "Simulator",
            "simulation": "EMG_and_claw"
          }
        }
      ],
      {
        "id": "srxKpumyruyS7yoA",
        "title": "Text 9",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>3. If your program is set up correctly, you will notice that the cup gets crushed when too much pressure is applied. To prevent that from happening, add a pressure sensor to your program. To do so, click on &quot;Sensor&quot; and select &quot;Surface Pressure&quot; as a sensor type. Then, select &quot;Simulated Surface Pressure&quot; in the second dropdown menu.</p><p>4. Add a logic block to check if the pressure is above 1000 (we&#x27;ll assume that 1000 represents excessive pressure that can break a fragile object).</p><p>5. Next, we will need to use a new block type called &quot;Hold&quot; (see image below). The function of this block is described in <a href=\"https://drive.google.com/file/d/1VbpM4w3C9wnWMT9o3RScMFOITH9vWAzA/view?usp=share_link\">this short video</a>.  </p>"
          ]
        }
      },
      {
        "id": "FA-5gtLPFVmIe_lr",
        "title": "The Control Block",
        "content": {
          "type": "Image",
          "url": "https://collaborative-learning.concord.org/branch/master/assets/images/image_placeholder.png"
        }
      },
      {
        "id": "-iTf_NvEdVage5PD",
        "title": "Text 10",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>As explained in the video, the Hold block receives two inputs:</p><p>Input 1 (the top one) determines which value is passed through.</p><p>Input 2 (the bottom one) determines if the block is on or off.</p><p>If the Hold block is OFF, it simply passes input 1 through. In other words, the output would be equal to input 1.</p><p>If the Hold block is ON, it can do different things, such as outputting the number zero. This option is useful because when the gripper receives the number zero it opens up.</p><p>6. Finally, connect all the blocks together such that when the pressure is greater than 1000 the gripper opens up to release the object. Change the number &quot;1000&quot; such that the cup doesn&#x27;t get crushed. </p><p>Watch <a href=\"https://drive.google.com/file/d/1WroS5tX2lecfdLIVzATAhkqFnUrHSWsN/view?usp=share_link\">this tutorial video</a> if you need some additional guidance.  </p>"
          ]
        }
      },
      {
        "id": "8od0XSnf1qqURYMR",
        "title": "Text 11",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>PBS News Hour story</strong></p><p>Watch <a href=\"https://www.pbs.org/newshour/show/how-sensors-rewiring-nerves-could-help-prosthetics-feel-and-function-like-real-limbs\">this 6-minute video</a> from PBS News Hour on recent advancements in prosthetics and answer the following questions in your workspace. </p>"
          ]
        }
      },
      {
        "id": "4qXS3QDYXOCpe8dT",
        "title": "Text 12",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>1. How are the prosthetics “wired into the brain”?</p><p>2. How do you think the programming of our gripper compares to the programming of the prosthetics from the video?</p><p>3. What do you think would be affected most if you had decreased sensation of touch in your body?</p><p>4. Why is touch important to the human experience?</p>"
          ]
        }
      },
      {
        "id": "OpA7t27RXurcLg-k",
        "title": "Text 8",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>Reflection</strong></p><p>At the end of the activity, please record your current thinking and learning in your learning journal (see Reflection tab). </p>"
          ]
        }
      }
    ],
    "sharedModels": [
      {
        "sharedModel": {
          "type": "SharedDataSet",
          "id": "GaG54XgfEvVk0TXp",
          "providerId": "fXr4dhoarK6Kk02g",
          "dataSet": {
            "id": "Z5k_hPOSbDfKTbZU",
            "attributes": [],
            "cases": []
          }
        },
        "tiles": [
          "fXr4dhoarK6Kk02g"
        ]
      },
      {
        "sharedModel": {
          "type": "SharedVariables",
          "id": "i_XkwXDwyCD84JyN",
          "variables": [
            {
              "id": "QoUhLFHAy9x4vdlh",
              "name": "emg_key",
              "displayName": "EMG",
              "value": 446,
              "inputs": [],
              "color": "light-gray",
              "icon": "ccicon://emg_key",
              "labels": [
                "input",
                "sensor:emg-reading"
              ]
            },
            {
              "id": "vtVEMvyrmuivOLuM",
              "name": "pressure_key",
              "displayName": "Surface Pressure",
              "unit": "mPa",
              "value": 0,
              "inputs": [],
              "color": "light-gray",
              "icon": "ccicon://pressure_key",
              "labels": [
                "input",
                "sensor:fsr-reading",
                "className:long-name"
              ]
            },
            {
              "id": "3EWb9mDBBvgjyL25",
              "name": "gripper_key",
              "displayName": "Gripper",
              "value": 0,
              "inputs": [],
              "color": "light-gray",
              "icon": "ccicon://gripper_key",
              "labels": [
                "output",
                "live-output:Grabber",
                "live-output:Gripper 2.0"
              ]
            }
          ]
        },
        "tiles": [
          "FXSKc3qCsCpcuyBh",
          "fXr4dhoarK6Kk02g",
          "rJt5kDc73bJomWKx",
          "srxKpumyruyS7yoA",
          "-iTf_NvEdVage5PD",
          "8od0XSnf1qqURYMR",
          "4qXS3QDYXOCpe8dT",
          "OpA7t27RXurcLg-k"
        ]
      }
    ]
  }
}