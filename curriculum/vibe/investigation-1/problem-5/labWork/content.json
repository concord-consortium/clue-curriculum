{
  "type": "labWork",
  "content": {
    "tiles": [
      {
        "id": "-66T2fPypKhUIF43",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>Let&#x27;s learn how to control a robotic gripper with your muscle activity! </p><p>Make sure that you have all the materials shown in this picture:</p>"
          ]
        }
      },
      {
        "id": "Z7WuYOZdOor08hNi",
        "title": "Image 1",
        "content": {
          "type": "Image",
          "url": "brain/images/materials.jpg",
          "filename": "brain/images/materials.jpg"
        }
      },
      {
        "id": "Wg76H3JcM_qGbOLS",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u><strong>Step 1: Create a Dataflow program that controls the gripper</strong></u></p>"
          ]
        }
      },
      {
        "id": "ufWABoXPvKDwhE9S",
        "title": "Set-Up",
        "content": {
          "type": "Image",
          "url": "brain/images/1.5.jpg",
          "filename": "brain/images/1.5.jpg"
        }
      },
      {
        "id": "k2KxqTYpuQCWvsfD",
        "title": "Text 8",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>Set-Up</strong></p><p>1. Connect the blue cable to the Arduino board and then connect the other end of the blue cable to your computer’s USB port.</p><p>2. Plug in Gripper (grey ribbon cord).</p><p>3. Plug in the battery.</p><p>5. Drag and drop a Dataflow Tile into your workspace. Connect DataFlow with the hardware using the same method as previous lessons. (click the lightning bolt and connect to the serial port)</p><p>6. To make the gripper open and close, you will need to add an input block (for example, a timer or a generator) and connect it to the output block. </p><p>8. Experiment with different input types (for example, if you used a timer, switch it to a generator). </p><p>9. When you&#x27;re done, delete the Dataflow tile and unplug the battery. </p>"
          ]
        }
      },
      {
        "id": "Yqms-LsAR0EaXXuZ",
        "display": "teacher",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>Explanation of the above code blocks (not for students):</strong></p><p>In this activity, there is only one muscle (EMG) sensor. Students can choose one of the Demo inputs or a connected Arduino. When the student choses &#x27;BB EMG’ from the Sensor block menu then they will get a browser dialog allowing them to select the hardware for real-time data input.</p><p>Output: Students can either choose ‘Demo Output’ blocks for a simulated output device (an animated gripper that opens and closes) or the Live Output block to control an external device.</p><p>The signal is interpreted as a percentage between 0 and 1 mapped to how far the  gripper is closed. Note that students must normalize the signal inputs so that  </p><p>The logic block might need to detect if the EMG crosses the threshold with a rising or falling edge. The polarity of the cross may inform whether the gripper opens or closes. </p>"
          ]
        }
      },
      {
        "id": "u-D-4fUm_3jvupew",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u><strong>Step 2: Create a program that reads EMG data</strong></u></p><p>1. Stick two EMG surface electrodes on your forearm and one on your elbow.</p><p>2. Find the orange cord that ends in two red and one black alligator clips. </p><p>3. Connect the black alligator clip to the electrode on your elbow and the red alligator clips to the electrodes on your forearm. </p><p>4. Plug the end of the orange wire into the orange connection box on the Muscle SpikerShield.</p>"
          ]
        }
      },
      {
        "id": "1Rd3c6ll9UT2bcUa",
        "title": "diagram showing arm electrodes and Arduino",
        "content": {
          "type": "Image",
          "url": "brain/images/EMG_elec.png",
          "filename": "brain/images/EMG_elec.png"
        }
      },
      {
        "id": "a6Y-_d7uJgXwYKSX",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>5. Create a new Dataflow tile and add a sensor block:</p><p>- In the &quot;Select a sensor type&quot; drop-down menu, select EMG</p><p>- In the &quot;Select a sensor&quot; drop-down menu, select &quot;connect for live EMG&quot;</p><p>6. Click on the button with the lighting bolt, where it says &quot;click to finish connection&quot;</p><p>- The browser may open a popup that says the site would like to connect to a Serial Port.  </p><p>- There should only be one choice.  Click on it and then hit the connect button. </p>"
          ]
        }
      },
      {
        "id": "nz61VSvy7o4fahSJ",
        "title": "Sensor Block asking for connection",
        "content": {
          "type": "Image",
          "url": "brain/images/EMG_sensor.png",
          "filename": "brain/images/EMG_sensor.png"
        }
      },
      {
        "id": "I1DPyVivaatqn1j9",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p>7. Set the sampling rate to 100ms</p><p>8. Click on the graph icon in the EMG sensor block to visualize the incoming data. Do you see a change in the reading when you contract your arm muscles?</p>"
          ]
        }
      },
      {
        "id": "3t_fpHwIINxmPfh_",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u><strong>Step 3: Add a simulated output</strong></u></p><p>To make sure that the program reads your EMG data correctly, add a demo output. For example, try to make a program that turns on a virtual light bulb when the EMG reading is above a certain value. </p><p><strong>Tip</strong>: you will need to use Logic and Number blocks.</p><p>Next, instead of a light bulb choose a grabber demo. Can you make the simulated grabber open and close when you contract your arm muscles? </p>"
          ]
        }
      },
      {
        "id": "hYx1wCzN11h6MHfw",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u><strong>Step 4: Control a real-life gripper with your muscles</strong></u></p><p>Detailed instructions:</p><p>1. Replace the Demo Output block with a Live Output Block. In the drop-down menu, choose &quot;Gripper 2.0.&quot; </p><p>2. Power up the gripper by connecting a 9V battery to the Muscle SpikerShield (the yellow board). </p><p>Can you make the gripper open and close by contracting your arm muscles?</p><p>Congratulations! You just created a model of a bionic arm!</p>"
          ]
        }
      },
      {
        "id": "UX_DWReXodl0gDIr",
        "title": "Text 1",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u><strong>Experiment</strong></u></p><p>Experiment with the following:</p><ul><li>Changing the locations of the EMG electrodes (can you control the gripper more effectively with different muscles?)</li><li>Grasping objects of different sizes/weights. </li><li>Stacking plastic cups (can you get quicker over time?)</li></ul><p>When you are done experimenting, unplug all of the accessories from the circuit board and place them back in their protective packaging.</p>"
          ]
        }
      },
      {
        "id": "UX_DWReXodl0gDIr",
        "title": "Text 1",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u><strong>Experiment</strong></u></p><p>Experiment with the following:</p><ul><li>Changing the locations of the EMG electrodes (can you control the gripper more effectively with different muscles?)</li><li>Grasping objects of different sizes/weights. </li><li>Stacking plastic cups (can you get quicker over time?)</li></ul><p>When you are done experimenting, unplug all of the accessories from the circuit board and place them back in their protective packaging.</p>"
          ]
        }
      },
      {
        "id": "BoMrohzyu7zzPVhP",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u><strong>Evaluate the design of the gripper</strong></u></p><p>The EMG-controlled gripper that you programmed is a simple model of a bionic arm. Discuss the strengths and weaknesses of the gripper with your group and summarize the conversation in the table below (drag and drop it into your workspace).  </p>"
          ]
        }
      },
      {
        "id": "vx1OdFEV67VjXwQM",
        "content": {
          "type": "Table",
          "columnWidths": {
            "mIL2k7BHwZ_OP_NH": 213.07188415527344,
            "9i46qsewEPs3YSKl": 231.73751831054688
          }
        }
      },
      {
        "id": "Kui4MWtu6qcPlkfg",
        "title": "Text 3",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><u><strong>Revisit your model from Lesson 1.1</strong></u></p><p>As you may remember, in Lesson 1.1, right after watching Tilly’s video, you were asked to make a diagram or a flow chart to explain how Tilly controls her bionic arms. Go back to Lesson 1.1 by opening it in a new tab and navigate back to the diagram that you made.</p><p>Using your new knowledge of how robotic arms and EMG work, develop a new diagram or a flow chart in your current workspace. What would you change? What new steps would you add to explain how Tilly controls her bionic arms? </p>"
          ]
        }
      },
      {
        "id": "FySTI5ZeFjtBFivK",
        "content": {
          "type": "Text",
          "format": "html",
          "text": [
            "<p><strong>Reflection</strong></p><p>Please record your current thinking and learning in your learning journal (see Reflection tab). </p>"
          ]
        }
      }
    ],
    "sharedModels": [
      {
        "sharedModel": {
          "type": "SharedDataSet",
          "id": "JbmFo_H6hLC9enxW",
          "providerId": "vx1OdFEV67VjXwQM",
          "dataSet": {
            "id": "sjCdybVmwF47MzMU",
            "name": "Gripper analysis",
            "attributes": [
              {
                "id": "mIL2k7BHwZ_OP_NH",
                "clientKey": "",
                "name": "Strengths",
                "hidden": false,
                "units": "",
                "formula": {},
                "values": [],
                "title": ""
              },
              {
                "id": "9i46qsewEPs3YSKl",
                "clientKey": "",
                "name": "Weaknesses",
                "hidden": false,
                "units": "",
                "formula": {},
                "values": [],
                "title": ""
              }
            ],
            "cases": []
          }
        },
        "tiles": [
          "vx1OdFEV67VjXwQM"
        ]
      }
    ]
  }
}
